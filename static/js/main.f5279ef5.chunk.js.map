{"version":3,"sources":["reportWebVitals.js","features/employees/employees.slices.js","utils/store.js","Components/BottomNavigation.jsx","Components/TopNavigation.jsx","Components/EmployeesTable.jsx","Components/LinkWithAnimation.jsx","Components/HeaderEmployeesList.jsx","utils/data.js","Pages/EmployeesList/index.jsx","Components/HeaderHome.jsx","utils/functions/removeHyphens.js","Components/DropdownMenu.jsx","utils/functions/generateFormChildren/index.js","utils/functions/handleInputsErrorMessage.js","assets/check-solid.svg","utils/functions/handleFormValidation/index.js","utils/functions/returnArrayOfFormInputs.js","utils/functions/handleSubmit/index.js","Components/Modal.jsx","Components/CreateEmployeeForm.jsx","Pages/Home/index.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fakeEmployees","firstName","lastName","dateOfBirth","startDate","street","city","state","zipCode","department","employeesSlice","createSlice","name","initialState","reducers","addEmployee","action","push","payload","actions","reducer","configureStore","employees","employeesReducer","BottomNavigation","props","rows","previousPage","nextPage","canPreviousPage","canNextPage","pageIndex","pageSize","totalEntries","length","entriesStart","entriesEnd","className","onClick","disabled","TopNavigation","setPageSize","preGlobalFilteredRows","globalFilter","setGlobalFilter","useAsyncDebounce","count","useState","value","setValue","onChange","undefined","e","Number","target","map","placeholder","EmployeesTable","data","columns","useTable","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","id","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","LinkWithAnimation","url","direction","textContent","to","width","height","xmlns","fillRule","clipRule","d","HeaderEmployeesList","DEPARTMENTS","EMPLOYEES_COLUMNS","Header","accessor","STATES","abbreviation","EmployeeList","useSelector","useMemo","removeHyphens","str","replace","DropdownMenu","options","inputValue","setInputValue","handleClick","clickEvent","optionValue","updateInputWith","stopPropagation","document","querySelector","hasAttribute","removeAttribute","setAttribute","type","option","generateFormChildren","formChildrenArray","child","element","Fragment","htmlFor","selected","maxDate","childrenInputs","console","log","handleInputsErrorMessage","_path","condition","input","errorMessage","errorMessageElement","getElementById","setCustomValidity","remove","DOMParser","parseFromString","body","firstChild","after","handleFormValidation","formInputsArray","a","parseInt","includes","filter","test","returnArrayOfFormInputs","lastElementIndex","elements","currentArray","handleSubmit","preventDefault","formLastInputIndex","forms","formElements","rawInputsArray","tagName","formValidation","err","_excluded","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCheckSolid","_ref","svgRef","title","titleId","focusable","role","viewBox","ref","fill","ForwardRef","Modal","CreateEmployeeForm","setDateOfBirth","setStartDate","dispatch","useDispatch","formChildren","date","subYears","Date","newEmployee","employeesActions","Home","ReactDOM","StrictMode","store","path"],"mappings":"+IAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gECQRQ,EAAgB,CACpBC,UAAW,MACXC,SAAU,SACVC,YAAa,SACbC,UAAW,aACXC,OAAQ,cACRC,KAAM,SACNC,MAAO,UACPC,QAAS,KACTC,WAAY,SAQRC,EAAiBC,YAAY,CACjCC,KAAM,YACNC,aAAc,CACZb,EACAA,EACAA,EACAA,EACAA,EACAA,GAEFc,SAAU,CAMRC,YANQ,SAMIR,EAAOS,GACjBT,EAAMU,KAAKD,EAAOE,aAKhBC,EAAqBT,EAArBS,QAASC,EAAYV,EAAZU,QAEFL,EAAgBI,EAAhBJ,YACAK,ICrDAC,cAAe,CAC5BD,QAAS,CACPE,UAAWC,K,sCC6CAC,EAjDU,SAACC,GACxB,IACEC,EAOED,EAPFC,KACAC,EAMEF,EANFE,aACAC,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,gBACAC,EAGEL,EAHFK,YACAC,EAEEN,EAFFM,UACAC,EACEP,EADFO,SAGIC,EAAeP,EAAKQ,OAEtBC,EAAeH,EAAWD,EAAY,EACtCK,EACFD,EAAeH,EAAWC,EACtBA,EACAE,EAAeH,EAAW,EAEhC,OACE,sBAAKK,UAAU,mBAAf,UACE,qBAAKA,UAAU,gDAAf,SACE,yCACWF,EAAeC,EAAaA,EAAaD,EADpD,MACqE,IAClEC,EAFH,OAEmBV,EAAKQ,OAFxB,gBAKF,sBAAKG,UAAU,oCAAf,UACE,wBACEzB,KAAK,uBACLyB,UAAU,4BACVC,QAAS,kBAAMX,KACfY,UAAWV,EAJb,sBAQA,yBACEjB,KAAK,mBACLyB,UAAU,4BACVC,QAAS,kBAAMV,KACfW,UAAWT,EAJb,iBAMO,c,OCUAU,G,MAlDO,SAACf,GACrB,IACEO,EAMEP,EANFO,SACAS,EAKEhB,EALFgB,YACAC,EAIEjB,EAJFiB,sBACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,gBACAC,EACEpB,EADFoB,iBAGIC,EAAQJ,EAAsBR,OACpC,EAA0Ba,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACMC,EAAWL,GAAiB,SAACG,GACjCJ,EAAgBI,QAASG,KACxB,KAEH,OACE,sBAAKd,UAAU,gBAAf,UACE,sBAAKA,UAAU,kDAAf,UACE,wCACA,wBACEW,MAAOhB,EACPkB,SAAU,SAACE,GACTX,EAAYY,OAAOD,EAAEE,OAAON,SAHhC,SAMG,CAAC,GAAI,GAAI,GAAI,KAAKO,KAAI,SAACvB,GAAD,OACrB,wBAAuBgB,MAAOhB,EAA9B,SACGA,GADUA,QAKjB,8CAEF,sBAAKK,UAAU,oCAAf,UACE,4CACA,uBACEA,UAAU,4BACVW,MAAOA,GAAS,GAChBE,SAAU,SAACE,GACTH,EAASG,EAAEE,OAAON,OAClBE,EAASE,EAAEE,OAAON,QAEpBQ,YAAW,UAAKV,EAAL,yBCyFNW,EApHQ,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC9B,EAeIC,mBAAS,CAAED,UAASD,QAAQG,kBAAiBC,YAAWC,iBAd1DC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,WACAzC,EALF,EAKEA,KACA0C,EANF,EAMEA,KACAvC,EAPF,EAOEA,gBACAC,EARF,EAQEA,YACAF,EATF,EASEA,SACAD,EAVF,EAUEA,aACAc,EAXF,EAWEA,YAXF,IAYElC,MAASwB,EAZX,EAYWA,UAAWC,EAZtB,EAYsBA,SAAUW,EAZhC,EAYgCA,aAC9BD,EAbF,EAaEA,sBACAE,EAdF,EAcEA,gBAGF,OACE,sBAAKP,UAAU,yBAAf,UACE,cAAC,EAAD,CACEL,SAAUA,EACVS,YAAaA,EACbC,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,EACjBC,iBAAkBA,qBAEpB,kDACMmB,KADN,IAEEK,GAAG,iBACHhC,UAAU,iBAHZ,UAKE,gCACG6B,EAAaX,KAAI,SAACe,GAAD,OAChB,4CACEjC,UAAU,+BACNiC,EAAYC,uBAFlB,aAIGD,EAAYE,QAAQjB,KAAI,SAACkB,GAAD,OACvB,+CACMA,EAAOC,eAAeD,EAAOE,yBADnC,IAEEtC,UAAU,yBAFZ,UAIGoC,EAAOG,OAAO,UACf,+BACGH,EAAOI,SACJJ,EAAOK,aACL,gBACA,gBACF,oBAQhB,iDAAWb,KAAX,aACGG,EAAKb,KAAI,SAACwB,EAAKC,GAEd,OADAb,EAAWY,GAET,4CACE1C,UAAU,+BACN0C,EAAIE,eAFV,aAIGF,EAAIG,MAAM3B,KAAI,SAAC4B,GACd,OACE,8CACMA,EAAKC,gBADX,IAEE/C,UAAU,uBAFZ,SAIG8C,EAAKP,OAAO,2BAS7B,cAAC,EAAD,CACElD,KAAMA,EACNC,aAAcA,EACdC,SAAUA,EACVC,gBAAiBA,EACjBC,YAAaA,EACbC,UAAWA,EACXC,SAAUA,QCpEHqD,G,YAtCW,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKjD,EAAwC,EAAxCA,UAAWkD,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAItD,OACE,eAAC,IAAD,CAAMC,GAAIH,EAAKjD,UAAS,eAAUA,GAAa,iBAAgBkD,EAA/D,UACE,sBAAMlD,UAAU,aAAhB,SACE,sBAAKA,UAAU,kBAAf,UACE,sBAAMA,UAAU,2BAAhB,SAA4CmD,IAC5C,sBAAMnD,UAAU,2BAAhB,SAA4CmD,SAGhD,sBAAKnD,UAAU,qBAAf,UACE,qBACEA,UAAU,aACVqD,MAAM,KACNC,OAAO,KACPC,MAAM,6BACNC,SAAS,UACTC,SAAS,UANX,SAQE,sBAAMC,EAAE,6FAEV,qBACE1D,UAAU,aACVqD,MAAM,KACNC,OAAO,KACPC,MAAM,6BACNC,SAAS,UACTC,SAAS,UANX,SAQE,sBAAMC,EAAE,qGCTHC,EAda,WAC1B,OACE,yBAAQ3D,UAAU,sBAAlB,UACE,cAAC,EAAD,CACEA,UAAU,oCACViD,IAAI,8BACJC,UAAU,OACVC,YAAY,oBAEd,oBAAInD,UAAU,+BAAd,mCCnBO4D,EAAc,CACzB,QACA,YACA,cACA,mBACA,SAGWC,EAAoB,CAC/B,CACEC,OAAQ,aACRC,SAAU,aAEZ,CACED,OAAQ,YACRC,SAAU,YAEZ,CACED,OAAQ,aACRC,SAAU,aAEZ,CACED,OAAQ,aACRC,SAAU,cAEZ,CACED,OAAQ,gBACRC,SAAU,eAEZ,CACED,OAAQ,SACRC,SAAU,UAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,QACRC,SAAU,SAEZ,CACED,OAAQ,WACRC,SAAU,YAIDC,EAAS,CACpB,CACEzF,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,SACN0F,aAAc,MAEhB,CACE1F,KAAM,iBACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,aACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,cACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,uBACN0F,aAAc,MAEhB,CACE1F,KAAM,iCACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,OACN0F,aAAc,MAEhB,CACE1F,KAAM,SACN0F,aAAc,MAEhB,CACE1F,KAAM,QACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,OACN0F,aAAc,MAEhB,CACE1F,KAAM,SACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,YACN0F,aAAc,MAEhB,CACE1F,KAAM,QACN0F,aAAc,MAEhB,CACE1F,KAAM,mBACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,gBACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,YACN0F,aAAc,MAEhB,CACE1F,KAAM,cACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,SACN0F,aAAc,MAEhB,CACE1F,KAAM,gBACN0F,aAAc,MAEhB,CACE1F,KAAM,aACN0F,aAAc,MAEhB,CACE1F,KAAM,aACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,iBACN0F,aAAc,MAEhB,CACE1F,KAAM,eACN0F,aAAc,MAEhB,CACE1F,KAAM,2BACN0F,aAAc,MAEhB,CACE1F,KAAM,OACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,SACN0F,aAAc,MAEhB,CACE1F,KAAM,QACN0F,aAAc,MAEhB,CACE1F,KAAM,eACN0F,aAAc,MAEhB,CACE1F,KAAM,cACN0F,aAAc,MAEhB,CACE1F,KAAM,eACN0F,aAAc,MAEhB,CACE1F,KAAM,iBACN0F,aAAc,MAEhB,CACE1F,KAAM,eACN0F,aAAc,MAEhB,CACE1F,KAAM,YACN0F,aAAc,MAEhB,CACE1F,KAAM,QACN0F,aAAc,MAEhB,CACE1F,KAAM,OACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,MAEhB,CACE1F,KAAM,iBACN0F,aAAc,MAEhB,CACE1F,KAAM,WACN0F,aAAc,MAEhB,CACE1F,KAAM,aACN0F,aAAc,MAEhB,CACE1F,KAAM,gBACN0F,aAAc,MAEhB,CACE1F,KAAM,YACN0F,aAAc,MAEhB,CACE1F,KAAM,UACN0F,aAAc,OCrQHC,EAdM,WACnB,IAAMjF,EAAYkF,aAAY,SAACjG,GAAD,OAAWA,EAAMe,aAEzCqC,EAAU8C,mBAAQ,kBAAMP,IAAmB,IAC3CxC,EAAO+C,mBAAQ,kBAAMnF,IAAW,CAACA,IAEvC,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAgBoC,KAAMA,EAAMC,QAASA,QCQ5BwC,G,YAdA,WAEb,OACE,yBAAQ9D,UAAU,SAAlB,UACE,oBAAIA,UAAU,kBAAd,mBAEA,cAAC,EAAD,CACEiD,IAAI,2CACJE,YAAY,gC,MCdLkB,MAJf,SAAuBC,GACrB,OAAOA,EAAIC,QAAQ,KAAM,M,iBCiEZC,G,YAvDM,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,QAASzC,EAAS,EAATA,GAC/B,EAAoCtB,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KAOMC,EAAc,SAACC,EAAYC,EAAaC,GAC5CF,EAAWG,kBAEX,IAAMR,EAAeS,SAASC,cAAT,yBAAyClD,IAE1DwC,EAAaW,aAAa,QAC5BX,EAAaY,gBAAgB,QAE7BZ,EAAaa,aAAa,OAAQ,IAGhCP,GAEFC,EAAgBD,IAGpB,OACE,qCACE,sBAAK9E,UAAS,qCAAgCgC,GAA9C,UACE,wBACEsD,KAAK,SACLtF,UAAU,uBACVC,QAAS2E,EAHX,SAKkB,KAAfF,EAAoBA,EAApB,4BAAsD1C,KAEzD,oBAAIhC,UAAU,wBAAd,SACGyE,EAAQvD,KAAI,SAACqE,GACZ,IAAMT,EACc,kBAAXS,EAAsBA,EAAOhH,KAAOgH,EAC7C,OACE,oBACEvF,UAAU,uBAEVC,QAAS,SAACc,GAAD,OAAO6D,EAAY7D,EAAG+D,EAAaH,IAH9C,SAKGG,GAHIA,WASf,uBAAOQ,KAAK,SAAStD,GAAIA,EAAIrB,MAAO+D,EAAY,cAAa1C,SCOpDwD,EAvDc,SAAvBA,EAAwBC,GAC5B,OAAOA,EAAkBvE,KAAI,SAACwE,GAC5B,OAAQA,EAAMC,SACZ,IAAK,QACH,OACE,eAAC,IAAMC,SAAP,WACE,uBAAOC,QAASH,EAAM1D,GAAIhC,UAAU,wBAApC,SACGqE,EAAcqB,EAAM1D,MAEvB,uBACEhC,UAAU,wBACVsF,KAAK,OACLtD,GAAI0D,EAAM1D,OAPO0D,EAAM1D,GAAK,aAWpC,IAAK,aACH,OACE,eAAC,IAAM4D,SAAP,WACE,uBAAOC,QAASH,EAAM1D,GAAIhC,UAAU,wBAApC,SACGqE,EAAcqB,EAAM1D,MAEvB,cAAC,IAAD,CACEhC,UAAU,wBACVgC,GAAI0D,EAAM1D,GACV8D,SAAUJ,EAAMI,SAChBjF,SAAU6E,EAAM7E,SAChBkF,QAASL,EAAMK,YATEL,EAAM1D,GAAK,aAcpC,IAAK,WACH,OACE,0BAAUhC,UAAU,2BAApB,SACGwF,EAAqBE,EAAMM,iBADsBN,EAAM1D,IAI9D,IAAK,SACH,OACE,eAAC,IAAM4D,SAAP,WACE,uBAAOC,QAASH,EAAM1D,GAAIhC,UAAU,wBAApC,SACGqE,EAAcqB,EAAM1D,MAEvB,cAAC,EAAD,CAAcyC,QAASiB,EAAMjB,QAASzC,GAAI0D,EAAM1D,OAJ7B0D,EAAM1D,GAAK,aAQpC,QAEE,OADAiE,QAAQC,IAAI,yBACL,U,yBC9BAC,ICjCXC,EDiCWD,EAzBf,SAAkCE,EAAWC,EAAOC,GAClD,IAIe,EAJXC,EAAsBvB,SAASwB,eAAT,+CACgBH,EAAMtE,KAGhD,OAAIqE,GACFC,EAAMI,kBAAkB,IACL,QAAnB,EAAAF,SAAA,SAAqBG,UACd,IAGJH,IACHA,GAAsB,IAAII,WAAYC,gBAAhB,sDAC2BP,EAAMtE,GADjC,qEAEduE,EAFc,kBAIpB,aACAO,KAAKC,WACPT,EAAMU,MAAMR,GAEZF,EAAMI,kBAAkBH,KAEnB,IEpBHU,EAAoB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EACpBD,EAAgBhG,KAAI,SAACoF,GAC1B,OAAQA,EAAMtE,IACZ,IAAK,OACL,IAAK,SACL,IAAK,YAEL,IAAK,aACH,OAAOmE,EACkB,kBAAhBG,EAAM3F,OAAsB2F,EAAM3F,MAAMd,OAAS,EACxDyG,EACA,uBAEJ,IAAK,WACH,OAAOH,EAC4B,kBAA1BiB,SAASd,EAAM3F,QACpByG,SAASd,EAAM3F,OAAS,EAC1B2F,EACA,yCAGJ,IAAK,aACH,OAAOH,EACLvC,EAAYyD,SAASf,EAAM3F,OAC3B2F,EACA,oCAGJ,IAAK,QACH,OAAOH,EACLnC,EAAOsD,QAAO,SAACpJ,GAAD,OAAWA,EAAMK,OAAS+H,EAAM3F,SAAOd,OAAS,EAC9DyG,EACA,+BAEJ,IAAK,gBACL,IAAK,aAEH,OAAOH,EADmB,0BAENoB,KAAKjB,EAAM3F,OAC7B2F,EACA,4CAGJ,QAGE,OAFAL,QAAQC,IAAI,2BACZD,QAAQC,IAAII,EAAMtE,KACX,OA9Cc,2CAAH,sDAkDXiF,ICnDTO,EAAuB,uCAAG,WAC9BC,EACAC,EACAC,GAH8B,SAAAR,EAAA,6DAK1BM,GAAoB,IACtBE,EAAa/I,KAAK8I,EAASD,IAC3BD,EAAwBC,EAAmB,EAAGC,EAAUC,IAP5B,kBASvBA,GATuB,2CAAH,0DAYdH,ICZTI,EAAY,uCAAG,WAAO7G,EAAGrC,GAAV,mBAAAyI,EAAA,6DACnBpG,EAAE8G,iBAEIC,EACJ7C,SAAS8C,MAAM,mBAAmBL,SAAS7H,OAAS,EAChDmI,EAAe/C,SAAS8C,MAAM,mBAAmBL,SALpC,SAOWF,EAC5BM,EACAE,EACA,IACA3K,MAAK,SAAC4K,GAAD,OACLA,EAAeX,QACb,SAAChB,GAAD,MAA6B,WAAlBA,EAAM4B,SAA0C,UAAlB5B,EAAM4B,cAbhC,OAObhB,EAPa,OAiBnB,IAIED,EAAqBC,GAAiB7J,MAAK,SAAC8K,GAC1C,IAAKA,EAAed,UAAS,GAAQ,CACnC,IAAMzJ,EAAYqH,SAASwB,eAAe,cAAc9F,MAClD9C,EAAWoH,SAASwB,eAAe,aAAa9F,MAChD3C,EAASiH,SAASwB,eAAe,UAAU9F,MAC3C1C,EAAOgH,SAASwB,eAAe,QAAQ9F,MACvCzC,EAAQ+G,SAASwB,eAAe,SAAS9F,MACzCxC,EAAU8G,SAASwB,eAAe,YAAY9F,MAC9CvC,EAAa6G,SAASwB,eAAe,cAAc9F,MACnD5C,EAAYkH,SAASwB,eAAe,cAAc9F,MAClD7C,EAAcmH,SAASwB,eAAe,iBAAiB9F,MAc7DjC,EAZoB,CAClBd,YACAC,WACAC,cACAC,YACAC,SACAC,OACAC,QACAC,UACAC,eAIF6G,SAASwB,eAAe,SAASpB,aAAa,OAAQ,QAG1D,MAAO+C,GACPnC,QAAQC,IAAIkC,GAlDK,2CAAH,wDAsDHR,IH7DXS,G,OAAY,CAAC,QAAS,YAE1B,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUvH,GAAU,IAAK,IAAI0B,EAAI,EAAGA,EAAI8F,UAAU5I,OAAQ8C,IAAK,CAAE,IAAI+F,EAASD,UAAU9F,GAAI,IAAK,IAAIgG,KAAOD,EAAcH,OAAOK,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQ1H,EAAO0H,GAAOD,EAAOC,IAAY,OAAO1H,GAAkBqH,EAASS,MAAMC,KAAMP,WAEhT,SAASQ,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKhG,EAAnE1B,EAEzF,SAAuCyH,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKhG,EAA5D1B,EAAS,GAAQkI,EAAaZ,OAAOa,KAAKV,GAAqB,IAAK/F,EAAI,EAAGA,EAAIwG,EAAWtJ,OAAQ8C,IAAOgG,EAAMQ,EAAWxG,GAAQuG,EAASG,QAAQV,IAAQ,IAAa1H,EAAO0H,GAAOD,EAAOC,IAAQ,OAAO1H,EAFxMqI,CAA8BZ,EAAQQ,GAAuB,GAAIX,OAAOgB,sBAAuB,CAAE,IAAIC,EAAmBjB,OAAOgB,sBAAsBb,GAAS,IAAK/F,EAAI,EAAGA,EAAI6G,EAAiB3J,OAAQ8C,IAAOgG,EAAMa,EAAiB7G,GAAQuG,EAASG,QAAQV,IAAQ,GAAkBJ,OAAOK,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgB1H,EAAO0H,GAAOD,EAAOC,IAAU,OAAO1H,EAMne,SAASyI,EAAcC,EAAMC,GAC3B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACf1K,EAAQ6J,EAAyBU,EAAMtB,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD,cAAe,OACfyB,UAAW,QACX,cAAe,MACf,YAAa,QACb/J,UAAW,kCACXgK,KAAM,MACNzG,MAAO,6BACP0G,QAAS,cACTC,IAAKN,EACL,kBAAmBE,GAClB1K,GAAQyK,EAAqB,gBAAoB,QAAS,CAC3D7H,GAAI8H,GACHD,GAAS,KAAMzD,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E+D,KAAM,eACNzG,EAAG,yRAIP,IAAI0G,EAA0B,aAAiBV,GILhCW,IJMA,IIhCD,WAIZ,OACE,wBAAQrK,UAAU,QAAQgC,GAAG,QAAQ,cAAY,QAAjD,SACE,sBAAKhC,UAAU,kDAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,sBAAf,UACE,0CACA,yDAEF,wBACEC,QAdW,WACjBgF,SAASwB,eAAe,SAASrB,gBAAgB,SAc3CE,KAAK,SACLtF,UAAU,4BAHZ,uB,SC0DOsK,GA3DY,WACzB,MAAsC5J,mBAAS,MAA/C,mBAAO5C,EAAP,KAAoByM,EAApB,KACA,EAAkC7J,mBAAS,MAA3C,mBAAO3C,EAAP,KAAkByM,EAAlB,KACMC,EAAWC,cAEXC,EAAe,CACnB,CAAEhF,QAAS,QAASL,KAAM,OAAQtD,GAAI,cACtC,CAAE2D,QAAS,QAASL,KAAM,OAAQtD,GAAI,aACtC,CACE2D,QAAS,aACTG,SAAUhI,EACV+C,SAAU,SAAC+J,GAAD,OAAUL,EAAeK,IACnC7E,QAAS8E,mBAAS,IAAIC,KAAQ,IAC9B9I,GAAI,iBAEN,CACE2D,QAAS,aACTG,SAAU/H,EACV8C,SAAU,SAAC+J,GAAD,OAAUJ,EAAaI,IACjC7E,QAAS,IAAI+E,KACb9I,GAAI,cAEN,CACE2D,QAAS,WACT3D,GAAI,yBACJgE,eAAgB,CACd,CAAEL,QAAS,QAASL,KAAM,OAAQtD,GAAI,UACtC,CAAE2D,QAAS,QAASL,KAAM,OAAQtD,GAAI,QACtC,CAAE2D,QAAS,SAAU3D,GAAI,QAASyC,QAAST,GAC3C,CAAE2B,QAAS,QAASL,KAAM,SAAUtD,GAAI,cAG5C,CAAE2D,QAAS,SAAU3D,GAAI,aAAcyC,QAASb,IAGlD,OACE,0BAAS5D,UAAU,iBAAnB,UACE,oBAAIA,UAAU,0BAAd,qCACA,uBAAMrB,OAAO,IAAIqD,GAAG,kBAAkBhC,UAAU,uBAAhD,UACGwF,EAAqBmF,GAEtB,wBACE3K,UAAU,gCACVzB,KAAK,SACL+G,KAAK,SACLrF,QAAS,SAACc,GAAD,OACP6G,EAAa7G,GAAG,SAACgK,GAAD,OACdN,EAASO,EAA6BD,QAN5C,qBAaF,cAAC,GAAD,QCnDSE,GAXF,WACX,OACE,sBAAKjL,UAAU,OAAf,UACE,cAAC,EAAD,IACA,sBAAMA,UAAU,uBAAhB,SACE,cAAC,GAAD,UCDRkL,IAAS3I,OACP,cAAC,IAAM4I,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,6BAA6B1F,QAAS,cAAC,GAAD,MAClD,cAAC,IAAD,CACE0F,KAAK,2CACL1F,QAAS,cAAC,EAAD,eAMnBV,SAASwB,eAAe,SAM1BvJ,K","file":"static/js/main.f5279ef5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n/**\r\n * An objet storing all information about an employee\r\n * @typedef {object} employee\r\n * @property  {string} firstName\r\n * @property  {string} lastName\r\n * @property  {string} dateOfBirth\r\n * @property  {string} startDate\r\n * @property  {string} street\r\n * @property  {string} city\r\n * @property  {string} state\r\n * @property  {string} zipCode\r\n * @property  {string} department\r\n */\r\n\r\nconst fakeEmployees = {\r\n  firstName: \"ben\",\r\n  lastName: \"string\",\r\n  dateOfBirth: \"string\",\r\n  startDate: \"10/06/2003\",\r\n  street: \"rue antoine\",\r\n  city: \"string\",\r\n  state: \"Alabama\",\r\n  zipCode: \"10\",\r\n  department: \"Sales\",\r\n};\r\n\r\n/**\r\n * create a slice for employees (see {@link https://redux-toolkit.js.org/api/createslice @reduxjs/toolkit})\r\n * @module employeesSlice\r\n */\r\n\r\nconst employeesSlice = createSlice({\r\n  name: \"employees\",\r\n  initialState: [\r\n    fakeEmployees,\r\n    fakeEmployees,\r\n    fakeEmployees,\r\n    fakeEmployees,\r\n    fakeEmployees,\r\n    fakeEmployees,\r\n  ],\r\n  reducers: {\r\n    /**\r\n     * This is an action that add an employee to global redux state\r\n     * @function addEmployee\r\n     * @param {employee} action.payload\r\n     */\r\n    addEmployee(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = employeesSlice;\r\n\r\nexport const { addEmployee } = actions;\r\nexport default reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport employeesReducer from \"../features/employees/employees.slices\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    employees: employeesReducer,\r\n  },\r\n});\r\n","import \"../styles/BottomNavigation.css\";\r\n\r\nconst BottomNavigation = (props) => {\r\n  const {\r\n    rows,\r\n    previousPage,\r\n    nextPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageIndex,\r\n    pageSize,\r\n  } = props;\r\n\r\n  const totalEntries = rows.length;\r\n\r\n  let entriesStart = pageSize * pageIndex + 1;\r\n  let entriesEnd =\r\n    entriesStart + pageSize > totalEntries\r\n      ? totalEntries\r\n      : entriesStart + pageSize - 1;\r\n\r\n  return (\r\n    <div className=\"BottomNavigation\">\r\n      <div className=\"BottomNavigation__showing-x-to-y-of-z-entries\">\r\n        <p>\r\n          Showing {entriesStart > entriesEnd ? entriesEnd : entriesStart} to{\" \"}\r\n          {entriesEnd} of {rows.length} entries\r\n        </p>\r\n      </div>\r\n      <div className=\"BottomNavigation__buttons-wrapper\">\r\n        <button\r\n          name=\"previous-page-button\"\r\n          className=\"BottomNavigation__buttons\"\r\n          onClick={() => previousPage()}\r\n          disabled={!canPreviousPage}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          name=\"next-page-button\"\r\n          className=\"BottomNavigation__buttons\"\r\n          onClick={() => nextPage()}\r\n          disabled={!canNextPage}\r\n        >\r\n          Next{\" \"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BottomNavigation;\r\n","import \"../styles/TopNavigation.css\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst TopNavigation = (props) => {\r\n  const {\r\n    pageSize,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n    useAsyncDebounce,\r\n  } = props;\r\n\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <div className=\"TopNavigation\">\r\n      <div className=\"TopNavigation__select-number-of-entries-wrapper\">\r\n        <span>Show</span>\r\n        <select\r\n          value={pageSize}\r\n          onChange={(e) => {\r\n            setPageSize(Number(e.target.value));\r\n          }}\r\n        >\r\n          {[10, 25, 50, 100].map((pageSize) => (\r\n            <option key={pageSize} value={pageSize}>\r\n              {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <span>entries</span>\r\n      </div>\r\n      <div className=\"TopNavigation__search-bar-wrapper\">\r\n        <label>Search:</label>\r\n        <input\r\n          className=\"TopNavigation__search-bar\"\r\n          value={value || \"\"}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n            onChange(e.target.value);\r\n          }}\r\n          placeholder={`${count} records...`}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","import \"../styles/EmployeesTable.css\";\r\nimport React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useSortBy,\r\n} from \"react-table\";\r\n\r\nimport BottomNavigation from \"./BottomNavigation\";\r\nimport TopNavigation from \"./TopNavigation\";\r\n\r\n/**\r\n * return all employees in a table made with {@link React-table https://react-table.tanstack.com/docs/overview}\r\n * @module EmployeesTable\r\n */\r\n\r\nconst EmployeesTable = ({ data, columns }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    rows,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize, globalFilter },\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n  } = useTable({ columns, data }, useGlobalFilter, useSortBy, usePagination);\r\n\r\n  return (\r\n    <div className=\"EmployeesTable-wrapper\">\r\n      <TopNavigation\r\n        pageSize={pageSize}\r\n        setPageSize={setPageSize}\r\n        preGlobalFilteredRows={preGlobalFilteredRows}\r\n        globalFilter={globalFilter}\r\n        setGlobalFilter={setGlobalFilter}\r\n        useAsyncDebounce={useAsyncDebounce}\r\n      />\r\n      <table\r\n        {...getTableProps()}\r\n        id=\"employee-table\"\r\n        className=\"EmployeesTable\"\r\n      >\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr\r\n              className=\"EmployeesTable__heading-row\"\r\n              {...headerGroup.getHeaderGroupProps()}\r\n            >\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className=\"EmployeesTable__header\"\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \" 🔽\"\r\n                        : \" 🔼\"\r\n                      : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr\r\n                className=\"EmployeesTable__content-row\"\r\n                {...row.getRowProps()}\r\n              >\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className=\"EmployeesTable__cell\"\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <BottomNavigation\r\n        rows={rows}\r\n        previousPage={previousPage}\r\n        nextPage={nextPage}\r\n        canPreviousPage={canPreviousPage}\r\n        canNextPage={canNextPage}\r\n        pageIndex={pageIndex}\r\n        pageSize={pageSize}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployeesTable.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      firstName: PropTypes.string.isRequired,\r\n      lastName: PropTypes.string.isRequired,\r\n      dateOfBirth: PropTypes.string.isRequired,\r\n      startDate: PropTypes.string.isRequired,\r\n      street: PropTypes.string.isRequired,\r\n      city: PropTypes.string.isRequired,\r\n      state: PropTypes.string.isRequired,\r\n      zipCode: PropTypes.number.isRequired,\r\n      department: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      Header: PropTypes.string.isRequired,\r\n      accessor: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default EmployeesTable;\r\n","import \"../styles/LinkWithAnimation.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst LinkWithAnimation = ({ url, className, direction, textContent }) => {\r\n  if (direction === \"left\") {\r\n    //do stuff\r\n  }\r\n  return (\r\n    <Link to={url} className={`link ${className}`} data-direction={direction}>\r\n      <span className=\"link__mask\">\r\n        <div className=\"link__container\">\r\n          <span className=\"link__title1 link__title\">{textContent}</span>\r\n          <span className=\"link__title2 link__title\">{textContent}</span>\r\n        </div>\r\n      </span>\r\n      <div className=\"link__icon-wrapper\">\r\n        <svg\r\n          className=\"link__icon\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n        >\r\n          <path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\" />\r\n        </svg>\r\n        <svg\r\n          className=\"link__icon\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n        >\r\n          <path d=\"M21.883 12l-7.527 6.235.644.765 9-7.521-9-7.479-.645.764 7.529 6.236h-21.884v1h21.883z\" />\r\n        </svg>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkWithAnimation;\r\n","import \"../styles/HeaderEmployeesList.css\";\r\n\r\nimport LinkWithAnimation from \"./LinkWithAnimation\";\r\n\r\n/**\r\n * A simple header with a title inside\r\n * @module HeaderEMployeesList\r\n *\r\n */\r\n\r\nconst HeaderEmployeesList = () => {\r\n  return (\r\n    <header className=\"HeaderEmployeesList\">\r\n      <LinkWithAnimation\r\n        className=\"HeaderEmployeesList__link-to-home\"\r\n        url=\"/BenjaminLesne_14_07122021/\"\r\n        direction=\"left\"\r\n        textContent=\"Go Back to Home\"\r\n      />\r\n      <h1 className=\"HeaderEmployeesList__heading\">Current Employees</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderEmployeesList;\r\n","export const DEPARTMENTS = [\r\n  \"Sales\",\r\n  \"Marketing\",\r\n  \"Engineering\",\r\n  \"Human Ressources\",\r\n  \"Legal\",\r\n];\r\n\r\nexport const EMPLOYEES_COLUMNS = [\r\n  {\r\n    Header: \"First Name\",\r\n    accessor: \"firstName\",\r\n  },\r\n  {\r\n    Header: \"Last Name\",\r\n    accessor: \"lastName\",\r\n  },\r\n  {\r\n    Header: \"Start Date\",\r\n    accessor: \"startDate\",\r\n  },\r\n  {\r\n    Header: \"Department\",\r\n    accessor: \"department\",\r\n  },\r\n  {\r\n    Header: \"Date of Birth\",\r\n    accessor: \"dateOfBirth\",\r\n  },\r\n  {\r\n    Header: \"Street\",\r\n    accessor: \"street\",\r\n  },\r\n  {\r\n    Header: \"City\",\r\n    accessor: \"city\",\r\n  },\r\n  {\r\n    Header: \"State\",\r\n    accessor: \"state\",\r\n  },\r\n  {\r\n    Header: \"Zip Code\",\r\n    accessor: \"zipCode\",\r\n  },\r\n];\r\n\r\nexport const STATES = [\r\n  {\r\n    name: \"Alabama\",\r\n    abbreviation: \"AL\",\r\n  },\r\n  {\r\n    name: \"Alaska\",\r\n    abbreviation: \"AK\",\r\n  },\r\n  {\r\n    name: \"American Samoa\",\r\n    abbreviation: \"AS\",\r\n  },\r\n  {\r\n    name: \"Arizona\",\r\n    abbreviation: \"AZ\",\r\n  },\r\n  {\r\n    name: \"Arkansas\",\r\n    abbreviation: \"AR\",\r\n  },\r\n  {\r\n    name: \"California\",\r\n    abbreviation: \"CA\",\r\n  },\r\n  {\r\n    name: \"Colorado\",\r\n    abbreviation: \"CO\",\r\n  },\r\n  {\r\n    name: \"Connecticut\",\r\n    abbreviation: \"CT\",\r\n  },\r\n  {\r\n    name: \"Delaware\",\r\n    abbreviation: \"DE\",\r\n  },\r\n  {\r\n    name: \"District Of Columbia\",\r\n    abbreviation: \"DC\",\r\n  },\r\n  {\r\n    name: \"Federated States Of Micronesia\",\r\n    abbreviation: \"FM\",\r\n  },\r\n  {\r\n    name: \"Florida\",\r\n    abbreviation: \"FL\",\r\n  },\r\n  {\r\n    name: \"Georgia\",\r\n    abbreviation: \"GA\",\r\n  },\r\n  {\r\n    name: \"Guam\",\r\n    abbreviation: \"GU\",\r\n  },\r\n  {\r\n    name: \"Hawaii\",\r\n    abbreviation: \"HI\",\r\n  },\r\n  {\r\n    name: \"Idaho\",\r\n    abbreviation: \"ID\",\r\n  },\r\n  {\r\n    name: \"Illinois\",\r\n    abbreviation: \"IL\",\r\n  },\r\n  {\r\n    name: \"Indiana\",\r\n    abbreviation: \"IN\",\r\n  },\r\n  {\r\n    name: \"Iowa\",\r\n    abbreviation: \"IA\",\r\n  },\r\n  {\r\n    name: \"Kansas\",\r\n    abbreviation: \"KS\",\r\n  },\r\n  {\r\n    name: \"Kentucky\",\r\n    abbreviation: \"KY\",\r\n  },\r\n  {\r\n    name: \"Louisiana\",\r\n    abbreviation: \"LA\",\r\n  },\r\n  {\r\n    name: \"Maine\",\r\n    abbreviation: \"ME\",\r\n  },\r\n  {\r\n    name: \"Marshall Islands\",\r\n    abbreviation: \"MH\",\r\n  },\r\n  {\r\n    name: \"Maryland\",\r\n    abbreviation: \"MD\",\r\n  },\r\n  {\r\n    name: \"Massachusetts\",\r\n    abbreviation: \"MA\",\r\n  },\r\n  {\r\n    name: \"Michigan\",\r\n    abbreviation: \"MI\",\r\n  },\r\n  {\r\n    name: \"Minnesota\",\r\n    abbreviation: \"MN\",\r\n  },\r\n  {\r\n    name: \"Mississippi\",\r\n    abbreviation: \"MS\",\r\n  },\r\n  {\r\n    name: \"Missouri\",\r\n    abbreviation: \"MO\",\r\n  },\r\n  {\r\n    name: \"Montana\",\r\n    abbreviation: \"MT\",\r\n  },\r\n  {\r\n    name: \"Nebraska\",\r\n    abbreviation: \"NE\",\r\n  },\r\n  {\r\n    name: \"Nevada\",\r\n    abbreviation: \"NV\",\r\n  },\r\n  {\r\n    name: \"New Hampshire\",\r\n    abbreviation: \"NH\",\r\n  },\r\n  {\r\n    name: \"New Jersey\",\r\n    abbreviation: \"NJ\",\r\n  },\r\n  {\r\n    name: \"New Mexico\",\r\n    abbreviation: \"NM\",\r\n  },\r\n  {\r\n    name: \"New York\",\r\n    abbreviation: \"NY\",\r\n  },\r\n  {\r\n    name: \"North Carolina\",\r\n    abbreviation: \"NC\",\r\n  },\r\n  {\r\n    name: \"North Dakota\",\r\n    abbreviation: \"ND\",\r\n  },\r\n  {\r\n    name: \"Northern Mariana Islands\",\r\n    abbreviation: \"MP\",\r\n  },\r\n  {\r\n    name: \"Ohio\",\r\n    abbreviation: \"OH\",\r\n  },\r\n  {\r\n    name: \"Oklahoma\",\r\n    abbreviation: \"OK\",\r\n  },\r\n  {\r\n    name: \"Oregon\",\r\n    abbreviation: \"OR\",\r\n  },\r\n  {\r\n    name: \"Palau\",\r\n    abbreviation: \"PW\",\r\n  },\r\n  {\r\n    name: \"Pennsylvania\",\r\n    abbreviation: \"PA\",\r\n  },\r\n  {\r\n    name: \"Puerto Rico\",\r\n    abbreviation: \"PR\",\r\n  },\r\n  {\r\n    name: \"Rhode Island\",\r\n    abbreviation: \"RI\",\r\n  },\r\n  {\r\n    name: \"South Carolina\",\r\n    abbreviation: \"SC\",\r\n  },\r\n  {\r\n    name: \"South Dakota\",\r\n    abbreviation: \"SD\",\r\n  },\r\n  {\r\n    name: \"Tennessee\",\r\n    abbreviation: \"TN\",\r\n  },\r\n  {\r\n    name: \"Texas\",\r\n    abbreviation: \"TX\",\r\n  },\r\n  {\r\n    name: \"Utah\",\r\n    abbreviation: \"UT\",\r\n  },\r\n  {\r\n    name: \"Vermont\",\r\n    abbreviation: \"VT\",\r\n  },\r\n  {\r\n    name: \"Virgin Islands\",\r\n    abbreviation: \"VI\",\r\n  },\r\n  {\r\n    name: \"Virginia\",\r\n    abbreviation: \"VA\",\r\n  },\r\n  {\r\n    name: \"Washington\",\r\n    abbreviation: \"WA\",\r\n  },\r\n  {\r\n    name: \"West Virginia\",\r\n    abbreviation: \"WV\",\r\n  },\r\n  {\r\n    name: \"Wisconsin\",\r\n    abbreviation: \"WI\",\r\n  },\r\n  {\r\n    name: \"Wyoming\",\r\n    abbreviation: \"WY\",\r\n  },\r\n];\r\n","import { useSelector } from \"react-redux\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport EmployeesTable from \"../../Components/EmployeesTable\";\r\nimport HeaderEmployeesList from \"../../Components/HeaderEmployeesList\";\r\nimport { EMPLOYEES_COLUMNS } from \"../../utils/data.js\";\r\n\r\nconst EmployeeList = () => {\r\n  const employees = useSelector((state) => state.employees);\r\n\r\n  const columns = useMemo(() => EMPLOYEES_COLUMNS, []);\r\n  const data = useMemo(() => employees, [employees]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderEmployeesList />\r\n      <EmployeesTable data={data} columns={columns} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import \"../styles/HeaderHome.css\";\r\n\r\nimport LinkWithAnimation from \"./LinkWithAnimation\";\r\n\r\n/**\r\n * A simple header with a title inside\r\n * @module Header\r\n *\r\n */\r\n\r\nconst Header = () => {\r\n  // View Current Employees\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1 className=\"Header__heading\">HRnet</h1>\r\n\r\n      <LinkWithAnimation\r\n        url=\"/BenjaminLesne_14_07122021/employee-list\"\r\n        textContent=\"view current employees\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","function removeHyphens(str) {\r\n  return str.replace(/-/g, \" \");\r\n}\r\n\r\nexport default removeHyphens;\r\n","import \"../styles/DropdownMenu.css\";\r\n\r\nimport { useState } from \"react\";\r\n/**\r\n * DropdownMenu React Component\r\n * @module DropdownMenu\r\n * @param {object} props\r\n * @param {String}  props.options\r\n * @param {String}  props.id\r\n */\r\n\r\nconst DropdownMenu = ({ options, id }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  /**\r\n   * @function handleClick - handle dropdown menus click on option and on the opening button. I tried my best to follow the functional programming paradigm.\r\n   * @param {string} optionValue - option that got click by user\r\n   * @param {string} setInputValue - give value to the state hidden input\r\n   */\r\n  const handleClick = (clickEvent, optionValue, updateInputWith) => {\r\n    clickEvent.stopPropagation();\r\n\r\n    const DropdownMenu = document.querySelector(`.DropdownMenu--${id}`);\r\n\r\n    if (DropdownMenu.hasAttribute(\"open\")) {\r\n      DropdownMenu.removeAttribute(\"open\");\r\n    } else {\r\n      DropdownMenu.setAttribute(\"open\", \"\");\r\n    }\r\n\r\n    if (optionValue) {\r\n      // stateInput.value = optionValue;\r\n      updateInputWith(optionValue);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className={`DropdownMenu DropdownMenu--${id}`}>\r\n        <button\r\n          type=\"button\"\r\n          className=\"DropdownMenu__button\"\r\n          onClick={handleClick}\r\n        >\r\n          {inputValue !== \"\" ? inputValue : `Click to select a ${id}`}\r\n        </button>\r\n        <ul className=\"DropdownMenu__options\">\r\n          {options.map((option) => {\r\n            const optionValue =\r\n              typeof option === \"object\" ? option.name : option;\r\n            return (\r\n              <li\r\n                className=\"DropdownMenu__option\"\r\n                key={optionValue}\r\n                onClick={(e) => handleClick(e, optionValue, setInputValue)}\r\n              >\r\n                {optionValue}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <input type=\"hidden\" id={id} value={inputValue} data-testid={id} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","import React from \"react\";\r\nimport removeHyphens from \"../removeHyphens\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport DropdownMenu from \"../../../Components/DropdownMenu\";\r\n\r\n/**\r\n * return children input JSX from an array of objects describing each child\r\n * @function generateFormChildren\r\n * @param {Array.<Object>} formChildrenArray - array full of object each of them reprente a form input child element\r\n */\r\nconst generateFormChildren = (formChildrenArray) => {\r\n  return formChildrenArray.map((child) => {\r\n    switch (child.element) {\r\n      case \"input\":\r\n        return (\r\n          <React.Fragment key={child.id + \"-fragment\"}>\r\n            <label htmlFor={child.id} className=\"createEmployee__label\">\r\n              {removeHyphens(child.id)}\r\n            </label>\r\n            <input\r\n              className=\"createEmployee__input\"\r\n              type=\"text\"\r\n              id={child.id}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      case \"DatePicker\":\r\n        return (\r\n          <React.Fragment key={child.id + \"-fragment\"}>\r\n            <label htmlFor={child.id} className=\"createEmployee__label\">\r\n              {removeHyphens(child.id)}\r\n            </label>\r\n            <DatePicker\r\n              className=\"createEmployee__input\"\r\n              id={child.id}\r\n              selected={child.selected}\r\n              onChange={child.onChange}\r\n              maxDate={child.maxDate}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n\r\n      case \"fieldset\":\r\n        return (\r\n          <fieldset className=\"createEmployee__fieldset\" key={child.id}>\r\n            {generateFormChildren(child.childrenInputs)}\r\n          </fieldset>\r\n        );\r\n      case \"select\":\r\n        return (\r\n          <React.Fragment key={child.id + \"-fragment\"}>\r\n            <label htmlFor={child.id} className=\"createEmployee__label\">\r\n              {removeHyphens(child.id)}\r\n            </label>\r\n            <DropdownMenu options={child.options} id={child.id} />\r\n          </React.Fragment>\r\n        );\r\n\r\n      default:\r\n        console.log(\"unknown child element\");\r\n        return null;\r\n    }\r\n  });\r\n};\r\n\r\nexport default generateFormChildren;\r\n","/**\r\n * @function handleInputsErrorMessage\r\n * @param {Boolean} condition\r\n * @param {Object} input\r\n * @param {String} errorMessage\r\n * @returns {Boolean} - true if input got validated based on the condition given, false if not.\r\n */\r\n\r\nfunction handleInputsErrorMessage(condition, input, errorMessage) {\r\n  let errorMessageElement = document.getElementById(\r\n    `createEmployee__input-error-message--${input.id}`\r\n  );\r\n\r\n  if (condition) {\r\n    input.setCustomValidity(\"\");\r\n    errorMessageElement?.remove();\r\n    return true;\r\n  }\r\n\r\n  if (!errorMessageElement) {\r\n    errorMessageElement = new DOMParser().parseFromString(\r\n      `<p id=\"createEmployee__input-error-message--${input.id}\" class=\"createEmployee__input-error-message\">\r\n          ${errorMessage}\r\n        </p>`,\r\n      \"text/html\"\r\n    ).body.firstChild;\r\n    input.after(errorMessageElement);\r\n\r\n    input.setCustomValidity(errorMessage);\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default handleInputsErrorMessage;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCheckSolid(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"check\",\n    className: \"svg-inline--fa fa-check fa-w-16\",\n    role: \"img\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckSolid);\nexport default __webpack_public_path__ + \"static/media/check-solid.5dcf9568.svg\";\nexport { ForwardRef as ReactComponent };","import handleInputsErrorMessage from \"../handleInputsErrorMessage\";\r\nimport { STATES, DEPARTMENTS } from \"../../data\";\r\n\r\n/**\r\n * Get an array of inputs and call handleInputsErrorMessage on each of them with as first arg, the condition to resolve, second the input element and the error message to display if the condition return false.\r\n * @function handleFormValidation\r\n * @param {Array} formInputsArray - full of inputs element\r\n * @returns {Array<Boolean>} - Array storing all condition result. The goal is to get this array to be full of trues to validate the user's inputs\r\n */\r\n\r\nconst handleFormValidation = async (formInputsArray) => {\r\n  return formInputsArray.map((input) => {\r\n    switch (input.id) {\r\n      case \"city\":\r\n      case \"street\":\r\n      case \"last-name\":\r\n      //fall through\r\n      case \"first-name\":\r\n        return handleInputsErrorMessage(\r\n          typeof input.value === \"string\" && input.value.length > 0,\r\n          input,\r\n          \"It must be a string\"\r\n        );\r\n      case \"zip-code\":\r\n        return handleInputsErrorMessage(\r\n          typeof parseInt(input.value) === \"number\" &&\r\n            parseInt(input.value) > 0,\r\n          input,\r\n          \"It must be a Number greater than zero\"\r\n        );\r\n\r\n      case \"department\":\r\n        return handleInputsErrorMessage(\r\n          DEPARTMENTS.includes(input.value),\r\n          input,\r\n          \"Select a valid department option\"\r\n        );\r\n\r\n      case \"state\":\r\n        return handleInputsErrorMessage(\r\n          STATES.filter((state) => state.name === input.value).length > 0,\r\n          input,\r\n          \"Select a valid state option\"\r\n        );\r\n      case \"date-of-birth\":\r\n      case \"start-date\":\r\n        const regularExpression = /^(\\d{2}\\/\\d{2}\\/\\d{4})$/;\r\n        return handleInputsErrorMessage(\r\n          regularExpression.test(input.value),\r\n          input,\r\n          \"It must be a date with mm-dd-yyyy format\"\r\n        );\r\n\r\n      default:\r\n        console.log(\"error: unknown input id\");\r\n        console.log(input.id);\r\n        return false;\r\n    }\r\n  });\r\n};\r\nexport default handleFormValidation;\r\n","/**\r\n * Since inputs are stored in form.elements we loop through it to store all inputs in an array. Side note: the submit button is added to this elements list as last that's why we use length - 2 to not add it to our inputs array.\r\n * @function returnArrayOfFormInputs\r\n * @param {Number} length - the last element index you want to store. e.g: 9: <input id=\"randomInput\" />\r\n * @param {Object} elements - findable in document.forms.yourForm.elements\r\n * @param {Array} currentArray - usally empty when we call this function for the first time. We store all inputs inside.\r\n * @returns {Array} - full of inputs elements\r\n */\r\n\r\nconst returnArrayOfFormInputs = async (\r\n  lastElementIndex,\r\n  elements,\r\n  currentArray\r\n) => {\r\n  if (lastElementIndex >= 0) {\r\n    currentArray.push(elements[lastElementIndex]);\r\n    returnArrayOfFormInputs(lastElementIndex - 1, elements, currentArray);\r\n  }\r\n  return currentArray;\r\n};\r\n\r\nexport default returnArrayOfFormInputs;\r\n","import handleFormValidation from \"../handleFormValidation\";\r\nimport returnArrayOfFormInputs from \"../returnArrayOfFormInputs\";\r\n\r\n/**\r\n * Get all inputs in an array, give it to handleFormValidation which returns an array storing all validation results. Then, if all validation are a success, addEmployee to redux state.\r\n * @function handleSubmit\r\n * @param {Object} e\r\n * @param {Object} addEmployee - function that will add to redux state a given object that stores all the datas about an employee.\r\n */\r\nconst handleSubmit = async (e, addEmployee) => {\r\n  e.preventDefault();\r\n\r\n  const formLastInputIndex =\r\n    document.forms[\"create-employee\"].elements.length - 2;\r\n  const formElements = document.forms[\"create-employee\"].elements;\r\n\r\n  const formInputsArray = await returnArrayOfFormInputs(\r\n    formLastInputIndex,\r\n    formElements,\r\n    []\r\n  ).then((rawInputsArray) =>\r\n    rawInputsArray.filter(\r\n      (input) => input.tagName === \"SELECT\" || input.tagName === \"INPUT\"\r\n    )\r\n  );\r\n\r\n  try {\r\n    //array.every() don't run on every element in formInputsArray I don't know why. So I use map and check if false is include in the array\r\n    // const formValidation = handleFormValidation(formInputsArray); fonctionne pas :shrug:\r\n\r\n    handleFormValidation(formInputsArray).then((formValidation) => {\r\n      if (!formValidation.includes(false)) {\r\n        const firstName = document.getElementById(\"first-name\").value;\r\n        const lastName = document.getElementById(\"last-name\").value;\r\n        const street = document.getElementById(\"street\").value;\r\n        const city = document.getElementById(\"city\").value;\r\n        const state = document.getElementById(\"state\").value;\r\n        const zipCode = document.getElementById(\"zip-code\").value;\r\n        const department = document.getElementById(\"department\").value;\r\n        const startDate = document.getElementById(\"start-date\").value;\r\n        const dateOfBirth = document.getElementById(\"date-of-birth\").value;\r\n\r\n        const newEmployee = {\r\n          firstName,\r\n          lastName,\r\n          dateOfBirth,\r\n          startDate,\r\n          street,\r\n          city,\r\n          state,\r\n          zipCode,\r\n          department,\r\n        };\r\n\r\n        addEmployee(newEmployee);\r\n        document.getElementById(\"modal\").setAttribute(\"open\", \"\");\r\n      }\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default handleSubmit;\r\n","import \"../styles/Modal.css\";\r\nimport React from \"react\";\r\n\r\nimport { ReactComponent as CheckLogo } from \"../assets/check-solid.svg\";\r\n\r\nconst Modal = () => {\r\n  const closeModal = () => {\r\n    document.getElementById(\"modal\").removeAttribute(\"open\");\r\n  };\r\n  return (\r\n    <dialog className=\"Modal\" id=\"modal\" data-testid=\"modal\">\r\n      <div className=\"Modal__content-wrapper modalbox success animate\">\r\n        <div className=\"Modal__icon icon\">\r\n          <CheckLogo />\r\n        </div>\r\n        <div className=\"Modal__text-content\">\r\n          <h1>Success!</h1>\r\n          <p>You added an employee</p>\r\n        </div>\r\n        <button\r\n          onClick={closeModal}\r\n          type=\"button\"\r\n          className=\"Modal__ok-button redo btn\"\r\n        >\r\n          Ok\r\n        </button>\r\n      </div>\r\n    </dialog>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import \"../styles/CreateEmployeeForm.css\";\r\nimport { DEPARTMENTS, STATES } from \"../utils/data\";\r\nimport generateFormChildren from \"../utils/functions/generateFormChildren\";\r\nimport handleSubmit from \"../utils/functions/handleSubmit\";\r\n\r\nimport Modal from \"./Modal\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as employeesActions from \"../features/employees/employees.slices\";\r\n\r\nimport subYears from \"date-fns/subYears\";\r\n\r\n/**\r\n * return create employee form. new employee cannot be younger than 18 years old and cannot start working a day that did not arrived yet\r\n * @module CreateEmployeeForm\r\n */\r\n\r\nconst CreateEmployeeForm = () => {\r\n  const [dateOfBirth, setDateOfBirth] = useState(null);\r\n  const [startDate, setStartDate] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const formChildren = [\r\n    { element: \"input\", type: \"text\", id: \"first-name\" },\r\n    { element: \"input\", type: \"text\", id: \"last-name\" },\r\n    {\r\n      element: \"DatePicker\",\r\n      selected: dateOfBirth,\r\n      onChange: (date) => setDateOfBirth(date),\r\n      maxDate: subYears(new Date(), 18),\r\n      id: \"date-of-birth\",\r\n    },\r\n    {\r\n      element: \"DatePicker\",\r\n      selected: startDate,\r\n      onChange: (date) => setStartDate(date),\r\n      maxDate: new Date(),\r\n      id: \"start-date\",\r\n    },\r\n    {\r\n      element: \"fieldset\",\r\n      id: \"createEmployeeFieldset\",\r\n      childrenInputs: [\r\n        { element: \"input\", type: \"text\", id: \"street\" },\r\n        { element: \"input\", type: \"text\", id: \"city\" },\r\n        { element: \"select\", id: \"state\", options: STATES },\r\n        { element: \"input\", type: \"number\", id: \"zip-code\" },\r\n      ],\r\n    },\r\n    { element: \"select\", id: \"department\", options: DEPARTMENTS },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"createEmployee\">\r\n      <h2 className=\"createEmployee__heading\">create an employee form</h2>\r\n      <form action=\"#\" id=\"create-employee\" className=\"createEmployee__form\">\r\n        {generateFormChildren(formChildren)}\r\n\r\n        <button\r\n          className=\"createEmployee__submit-button\"\r\n          name=\"submit\"\r\n          type=\"submit\"\r\n          onClick={(e) =>\r\n            handleSubmit(e, (newEmployee) =>\r\n              dispatch(employeesActions.addEmployee(newEmployee))\r\n            )\r\n          }\r\n        >\r\n          Save\r\n        </button>\r\n      </form>\r\n      <Modal />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CreateEmployeeForm;\r\n","import \"../../styles/Home.css\";\r\n\r\nimport Header from \"../../Components/HeaderHome\";\r\nimport CreateEmployeeForm from \"../../Components/CreateEmployeeForm\";\r\n\r\n/**\r\n * Home page calling components like Header and CreateEmployeeForm\r\n * @module Home\r\n */\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <Header />\r\n      <main className=\"container Home__main\">\r\n        <CreateEmployeeForm />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\";\n\nimport EmployeeList from \"./Pages/EmployeesList\";\nimport Home from \"./Pages/Home\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/BenjaminLesne_14_07122021\" element={<Home />} />\n          <Route\n            path=\"/BenjaminLesne_14_07122021/employee-list\"\n            element={<EmployeeList />}\n          />\n        </Routes>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}